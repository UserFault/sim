

1) у меня есть два проекта Тапп: старый (готовый) и новый (в процессе усовершенствования)
- дерево проектов Тапп:
  - движок новый с экспериментами.
  - движок старый - выделенный релиз для Оператора
  - движок старый со сменными адаптерами БД - для экспериментов.
- для отслеживания этих ветвей проекта надо уже заводить документ для учета версий проекта и архивами хранить версии проекта.

2) Движок для Оператора
- Надо собрать движок для Оператора - только на БД Аксцесс. 
   - Выбран старый движок, его надо пересобрать под БД аксцесс.
   - Это будет самостоятельный проект, производный от старого проекта движка Тапп.
   - Этот движок нужно внедрить в Оператор как вторую БД.
     Но не в существующий Оператор, а в новый, с новым гуем. Его пока нет, пока все отложено.
- надо описать движок (в Readme.txt) - какие его возможности реализованы, что он умеет.
- Этот новый заход на проект: собрать движок для использования в Оператор.
  - На Аксцесс БД
  - разработать структуру сущностей для Оператора.
  - Документировать возможности Движка в этом релизе - а то неясно, что и как там устроено, как им пользоваться.
- вместо всей этой системы адаптеров один только аксцесс просто жестко вшить в проект и все!

3) Движок старый для экспериментов
- надо описать движок (в Readme.txt) - какие его возможности реализованы, что он умеет.
- Надо написать прототип подсистемы сменных адаптеров БД. внедрить поддержку 4 адаптеров БД.
  Потом его будем внедрять в Тапп. В старый Тапп, поскольку важна стабильность интерфейса с БД, а в новом движке ее нет - там одни эксперименты.
  - надо понять насколько хорошо определены в этом проекте функции адаптера БД. 
      Я не могу создать систему из 5 адаптеров БД, пока не определен стабильный интерфейс адаптера БД!
  - я не знаю, удастся ли реализовать хранение данных в БД вроде Аксцесс - она не поддерживает 64-битные числа! 
  - это очень долго и усложнит всю работу над движком! Это надо проводить на уже готовом Движке. 
- имеет смысл создать предварительный прототип этой системы адаптеров БД, но не внедрять его в проект Тапп пока.
  - тогда надо написать инструкцию по внедрению системы адаптеров БД в проект.
  - протестировать на временном экземпляре проекта?
  - надо составить полный общий интерфейс для всех адаптеров БД.
  - решено реализовать адаптер как базовый класс в роли интерфейса: 
    - переменные специфичных типов не создавать,
    - наследовать проперти и функции
    - общие переменные и функции поместить в базовый класс и наследовать оттуда.
  - базовый класс будет содержать загрузчик сборок адаптеров конкретных БД 
  - для каждой БД - собственная сборка адаптера БД (Для Аксцесса и MsSql - тоже раздельные)
  - класс адаптера для NoDb рядом с базовым классом.
- как это работает:
  - когда приложение открывает Солюшен, оно передает объект настроек Солюшена. 
    В настройках Солюшена указан тип БД.
    Когда код должен создать объект БД, он вызывает загрузчик адаптеров БД. 
    Загрузчик располагается в базовом классе, наверно.
    Загрузчик загружает в домен приложения соответствующую сборку с классом-адаптером БД.
    И возвращает коду объект этого класса адаптера БД.
  - нужно для проекта создать по одной dll для каждого типа БД.
    Эти адаптеры разделены так для того, чтобы движок Тапп не требовал установки сборок коннекторов для всех СУБД, которые он поддерживает.
    Если их все собрать в главной сборке Тапп, она не будет запускаться без всех этих сборок коннекторов.
    - эти сборки должны ссылаться на сборку, содержащую базовый класс адаптера БД. 
       То есть, на сборку Движка.
    - следует создать шаблон сборки адаптера БД.
17:14 08.01.2020 - эксперимент проведен, подсистема адаптеров БД написана и опробована.
- хотя вот адаптеры аксцесса и MsSqlServer2005 можно было не выносить в отдельные сборки, так как они есть в ОС.
  Вроде бы... А может и нет - я всегда студию ставлю, а она свои коннекторы уже содержит.
  А без студии - проги могут и не запуститься, так как коннекторов нет. 

4) Движок новый
- Надо допиливать новый движок, но я забыл что там как и зачем.
  - там надо концепцию допиливать сначала я в ней и застрял.
- надо расчистить каталог проекта от всяких не основных файлов и штук.
  + расчистил каталог проекта.
  - надо расчистить сам проект - там есть лишние проекты. 
    Из них надо извлечь полезный код, а сами проекты - закрыть.
- В проект надо внедрять улучшенные подсистемы, но сейчас это сделать сложно - концепция не проработана.
   Это потребует множество переделок, поэтому сложные штуки внедрять нельзя.
   Их придется отложить на конец релиза.

5) Проблема: надо автоматически тестировать операции Движка: с ячейками связями снимками и файлами.
   Потому что - сложная система, я все не предусмотрю в ней. 
   И потом выявить эти ошибки будет сложно - структура сущностей сложная штука.
   Глупо будет, если из-за этого разгильдяйства провалится какой-нибудь мой проект.
- надо разработать автоматический тест для всех этих операций. Вручную все это проверять - нереально.
