Проект Tapp v2.3 "Astra"
Новая версия Tapp, использует SQL Server для хранения данных.
Элементы предметной области хранятся в таблицах, для работы требуемый элемент загружается в память. 
Представление элементов в памяти - как в tapp2.2.
Предполагается реализовать два варианта выполнения операций: 
а) все операции выполняются непосредственно с таблицами, база всегда в согласованном состоянии.
б) все операции выполняются с представлениями в памяти, в таблицы данные записываются специальным вызовом по окончании операции.
	Создание новых элементов при а) приводит к созданию записей в таблицах. 
	При б) есть возможность записи не создавать, используя элемент только в памяти, как временный, или сохранить его при необходимости.
Переключение между вариантами для каждого элемента индивидуальное.
Методы все еще в стадии предположений, поэтому пока проектируются только структуры данных.

Предполагается разделить все операции с элементами на базовые(неизменяемые) и модифицируемые. 
Базовые реализуют низкоуровневые операции, изменяемые состоят из базовых и позволяют индивидуальное поведение для каждого элемента.
Например, каждый тип связи может проводить собственные проверки и обработку операций создания/удаления/...
Типы связей можно добавлять, удалять, изменять, модифицировать операции со связями.

В версии 2.2 была проведена небольшая обкатка, выявились некоторые обстоятельства:
- Концепция в целом удобна для применений в анализе данных. Вероятно, следует ее для этого использовать.
- Возможность автоматизации, реорганизации структуры надо улучшить и использовать.
- Версию можно продолжать обкатывать и использовать для проектирования и отработки частей.
- Всего три оси связи ограничивают применение.
- База объемом 300000 объектов и классов довольно долго загружается/выгружается в файл, и занимает почти 1 гигабайт оперативной памяти.
- Формат хмл не позволяет добавить или удалить поле в элемент - база перестает загружаться из-за неверного формата.
- База работает очень медленно при поиске связей объекта/класса, если этих связей много. 
   Следует использовать хеш-таблицы, но они не сериализуются в ХМЛ. Оптимизация этого поиска невозможна.
- Оси связи используют специфические правила создания связей, поэтому для каждого типа связи нужен собственный обработчик операции.
- Классы могут нуждаться в специальных типах служебных объектов, как следствие, в специфических конструкторах объектов/классов и 
   других специальных вариантах стандартных операций.
- Для методов следует предусмотреть варианты C#-кода, скрипта, и новый в виде графа. Возможно, потребуются также модифицируемые обработчики операций.     
- Оптимизатор базы так и не набросан.
- В некоторых случаях применения базы удобнее использовать ячейки вместо классов/объектов. Возможно даже, это лучше чем классы+объекты.
- Класс можно использовать для хранения дефолтовых данных для объектов.
- non-Nullable типы CLR (int, float, ...) надо заменять на Nullable-типы, чтобы унифицировать - 
    использовать универсально значение null для всех типов данных объектов базы.
    
    
    
    
    