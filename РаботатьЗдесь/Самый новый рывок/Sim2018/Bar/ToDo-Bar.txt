Это лог работ по проекту - тут записываются что сделано, что еще надо сделать, и разные соображения по ходу работы.

15 декабря 2018 - создание проекта.

18 декабря 
- создан класс MSolution, пустой. Он будет корневым классом движка.
  - надо его родительские классы продумать и создать.
  - надо интерфейс ImSerializable доработать и добавить в проект.
  - надо классы его членов создать. Для них нужен интерфейс или базовый класс менеджера. 
    Лучше базовый класс, наверно.
    Хотя, так как одинаковы полей немного, а функции не используются повторно, то лучше просто по шаблону наштамповать нужные свойства класса.
    - каждый такой член солюшена - отдельная сложная задача в Большом плане. 
      Нельзя их так просто накидывать в проект - потом снова буду жаловаться, что проект слишком большой.
      Надо работу делать по частям. 
- создана иерархия классов Адаптер БД. Сами классы пустые.
  Для Солюшена без БД выделен отдельный адаптер NoDbAdapter.
- создано различение типов БД по атрибуту MDatabaseTypeAttribute. 
  Он описывает тип адаптера БД для автоматической проверки доступности данного типа БД при открытии Солюшена.
  Это надо запихать в функции:
  - Получить список доступных типов БД
  - Проверить, что указанный тип БД имеет сопоставленный адаптер в движке.
- Создан механизм получения ссылок на контейнер / солюшен.
  Раньше была просто статическая ссылка в MCell на объект контейнера.
  Теперь для этого, экспериментально!, используется статический класс MSolutionRefCollection.
  Он содержит словарь контейнеров и может хранить несколько ссылок разных контейнеров, различая их по ИД контейнера.
  Он выдает ссылку на контейнер по его ИД.
  Предположительно, он будет содержать только ссылку на текущий солюшен в каждом солюшене.
  (Или в каждом экземпляре движка? Вот тут непонятно, это и есть решаемая проблема.)
  Но если вдруг получится общий объект, в случае, когда будут два солюшена одновременно открыты, 
   то это решение обеспечит доступ к каждому солюшену раздельно и правильно. 
  - нужно проверить это решение 


19 декабря 2018   
+ 2.2.5 Собрать члены MSolution как поля и проперти с описаниями, добавить в класс. 
  + сделано.
+ 2.1.3 Устройство Кеша Идентификаторов ячеек и связей в контейнере.
  + код добавлен, вызываемые функции отмечены в их классах.
  + считай, сделано, но могут быть еще переделки:
    - проверять, что переданный Ид принадлежит ячейке а не связи, и наоборот. Если это потребуется.
  - надо тестировать, убедиться, что перегруженные функции реально используются.
    - Это можно только после сборки почти всего движка, ну или где-то посередине.
+ 2.2.16 Осмотреть и наполнить класс MVersion - сделано
+ 2.2.6 во все менеджеры, адаптерБД и контейнер добавить шаблонные свойства менеджера - сделано
- Значения проперти для MContainer берутся из MSolutionSettings, где они хранятся все время.
- Классы подсистемы контейнера перенесены в неймспейс Bar.Container. 
   Чтобы уменьшить свалку классов в дереве классов студии.
+ Все наследуемые проперти MObject и функции MElement добавлены, 
  снабжены заглушками и ТОДО-напоминаниями. Движок компилирован успешно.
  Можно тестировать разные кусочные функции.
  Это первый маленький успех проекта. Надо сделать архив проекта.
    
21 декабря 2018
+ 2.2.17 Собственное исключение Движка SimEngineException сделано.
  - теперь использовать его надо согласно плану.      
+ Сделаны функции определения и списка поддерживаемых типов БД.
  Размещаются в классе MUtility.
  + Написано описание механизма: Получение типов БД.txt
      