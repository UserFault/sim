++ Задача Service Flag Элементов
[template: ШаблонКарточкиЗадачи]

+++Состояние задачи
* Выполнена 09.01.2019 14:23:56

+++Задание
Значение ServiceFlag элементов не должно сохраняться в БД.

+++Зависимости
Добавить зависимости текущей задачи

+++Материалы
 * Ссылки на источники данных

+++Обсуждение и принятые решения
* Значение ServiceFlag элементов не должно сохраняться в БД, поскольку оно используется в чисто сервисных целях. Например, поиск пути в графе: Определение, является ли указанный класс производным от другого указанного класса. Эти задачи временные, и не требуют сохранения значений между сеансами работы Движка.
* Поэтому нужно отвязать ServiceFlag от БД для всех ячеек и связей, и хранить его локально в памяти экземпляра элемента.
* И он не должен влиять на таймштамп изменения элемента. Поскольку собственно изменения элемента не происходит, ведь это чисто технологическое значение.
* Он, возможно, должен влиять на таймштамп использования элемента. Или нет?
* Значение ServiceFlag контейнера может сохраняться в ФайлСолюшена вместе с остальными свойствами Солюшена. Оно не хранится в БД.
* Для сброса значений в элементах, после его использования, нужна функция в коллекциях ячеек и связей контейнера. Сейчас это public void SetServiceFlags(Int32 val). Вывести ее в Контейнер сейчас незачем, так как к коллекциям есть публичный доступ, и пока неясно, что именно будет использоваться в пользовательских операциях поиска: ячейки, связи, и то и другое. А выполняется такая функция долго, так как перебирает все элементы коллекции.
* Так как Движок сырой, много функций предполагается дописывать позже поверх Движка, в пользовательском коде. А для этого нужен доступ к некоторым внутренним функциям Движка. Поэтому много функций должны быть объявлены публичными, хотя пользователю они не нужны.

+++Выполняемые действия

++++1. MEngineLinkCollection
        /// <summary>
        /// NT-Присвоить всем элементам коллекции новое значение ServiceFlag
        /// </summary>
        /// <param name="val">Новое значение ServiceFlag</param>
        public void SetServiceFlags(Int32 val)
        {
            foreach (MElement el in this.Items)
                el.ServiceFlag = val;

            return;
        }
++++2. MCellCollection
        /// <summary>
        /// NT-Присвоить всем элементам коллекции новое значение ServiceFlag
        /// </summary>
        /// <param name="val">Новое значение ServiceFlag</param>
        public void SetServiceFlags(Int32 val)
        {
            foreach (MElement el in this.Items)
                el.ServiceFlag = val;

            return;
        }
++++3. MCell
Значение хранится в памяти. Поле и проперти реализовано в MCell, наследуется в MCellA и MCellB
        
        /// <summary>
        /// Сервисное значение (поиск в графе,  обслуживание и так далее) //default 0
        /// </summary>
        protected int m_serviceflag;//вынесен сюда, так как востребован в MCellA и MCellB
        
        /// <summary>
        /// Protected constructor
        /// </summary>
        /// <param name="sol">Объект Солюшена</param>
        protected MCell(MSolution sol)
        {
            this.m_Solution = sol;
            this.m_lastUsed = DateTime.Now;
            this.m_serviceflag = 0;
            //TODO: Добавить только MCell код инициализации здесь
            //для других полей инициализацию в производном классе делать
            
        }
        
        /// <summary>
        /// NT-Сервисное значение
        /// Не сохраняется в БД, не учитывает флаг ReadOnly, не изменяет таймштамп изменения.
        /// </summary>
        /// <remarks>
        /// Значение используемое для поиска в графе и подобных целях. 
        /// По умолчанию = 0.
        /// Не сохраняется в БД, не учитывает флаг ReadOnly, не изменяет таймштамп изменения. 
        /// </remarks>
        public override int ServiceFlag
        {
            get { return this.m_serviceflag; }
            set { this.m_serviceflag = value; }
        }


++++4. MLink
        /// <summary>
        /// Поле для значения, используемого в сервисных операциях (поиск в графе,  обслуживание и так далее) //default 0
        /// </summary>
        private int m_serviceflag;
        
        /// <summary>
        /// NT-Сервисное значение
        /// Не сохраняется в БД, не учитывает флаг ReadOnly, не изменяет таймштамп изменения.
        /// </summary>
        /// <remarks>
        /// Значение используемое для поиска в графе и подобных целях. 
        /// По умолчанию = 0.
        /// </remarks>
        public override Int32 ServiceFlag
        {
            get { return m_serviceflag; }
            set { m_serviceflag = value; }
        }
++++5. MContainer
        /// <summary>
        /// Сервисное значение
        /// Сохраняется в ФайлСолюшена, не учитывает флаг ReadOnly, не изменяет таймштамп изменения.
        /// </summary>
        /// <remarks>
        /// Значение используемое для поиска в графе и подобных целях. 
        /// По умолчанию = 0.
        /// </remarks>
        public override int ServiceFlag
        {
            get { return this.m_Solution.Settings.ContainerServiceFlag; }
            set { this.m_Solution.Settings.ContainerServiceFlag = value; }
        }

+++Отзывы
Оказались ли принятые решения правильными и почему/почему нет.

+++Документация
todo: Описать происходящие процессы и написать текст для документации
Для лучшего понимания кода и написания документации Движка.
 