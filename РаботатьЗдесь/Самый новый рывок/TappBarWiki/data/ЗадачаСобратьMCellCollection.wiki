++ Задача Собрать M Cell Collection
[template: ШаблонКарточкиЗадачи]

+++Состояние задачи
* Создана Нажми Ctrl+Alt+D

+++Задание
Собрать поля и придумать устройство MCellCollection

+++Зависимости
 * ЗадачаОпределитьСтроениеИдентификатораЭлемента
 * ЗадачаСобратьMIDиПодклассы
 * ЗадачаРазработатьИОписатьСтроениеЯчейки
 * ЗадачаРазработатьИОписатьСтроениеСвязи

+++Материалы
 * wiki:///V:/МоиПроекты/ДвижокТапп/Справочники/ДвижокТаппВики/ДвижокТаппВики.wiki?page=КоллекцияЯчеекКонтейнера

+++Обсуждение и принятые решения
 * Возможно, потребуется два-три словаря вместо одного, чтобы ускорить поиск ячейки по свойству. Надо изучить операции с ячейками.
    * см КоллекцияЯчеекКонтейнера
 * предлагается функция проверки, есть ли хотя бы одна временная ячейка в коллекции.
 * предлагается функция получения списка временных ячеек в коллекции.
    
Общая проблема этих коллекций - нужен словарь с неуникальным ключом. Он бы возвращал массивы элементов.
Но такого класса пока я не нашел в фреймворке.
    * я могу сделать его сам. см. [rel://../../../Материалы/ListDictionaryTest.cs] Но он жрет много памяти, хотя и ускоряет поиск ячеек.

* Нужен метод Закрыть() в коллекции, он должен очищать коллекцию и вызываться в конце функции закрытия солюшена.
    * для этого ксть метод Clear(), а почему он не вызывается там - недоделка.

* после Clear() надо вызывать GC.Collect() для освобождения памяти. Иначе объекты не выгружаются из памяти.
    * Это надо вызывать при очистке солюшена или при закрытии солюшена.
    Вызывать сборку мусора когда попало - неправильно, так как она сильно тормозит процесс.
    
Использование:
- проперти Итемс: используется для перечисления ячеек при создании снимков солюшена.
и вне движка.
- проперти коунт - для получения количества ячеек в контейнере
- S1_containsName(string name) - в public bool MEngine.CellIsUniqueName(string cellName)
- S1_containsCell(MID cellid) - в public void MCell.S1_Unload()
- MCell S1_getCell(MID cellid) - 10 мест.
- MCell S1_getCell(string title) - 
  - перебирается вся коллекция в поисках указанного имени
  - в public MCell MEngine.CellLoad(string cellTitle, MCellMode cellMode)
  - в private MCell MEngine.S1_intGetCell(string title)
  - поиск ячеек по названию - востребовано, но допускает непроизводительность. И возвращается первая попавшаяся ячейка а не весь массив имеющихся.
- MCellCollection S1_getCells(MCellTemplate template) - не используется, хотя должна бы.
  - очень медленно работает, проходя весь список по всем полям ячейки
- S1_AddCell(MCell cell) - в 6 местах
- S1_RemoveCell(MCell cell) - в 5 местах
- S1_Clear() - при закрытии солюшена и при очистке солюшена
- остальное просмотрел - нет интересного

Вопросы актуальные:
- в адаптере БД коллекция используется для возврата ячеек после выборки.
  - а как она потом используется?
- в коллекции выполняется поиск по ид ячейки и по имени ячейки. 
  И еще общий поиск по MCellTemplate, он заведомо медленный.
  Поиск по имени нужен для поиска начальной ячейки World и для проверки уникальности имени ячейки.
  Массивы ячеек по имени искать предлагается через шаблоны поиска. 
  Такой поиск пока не востребован, поэтому он медленный. Он требует собственного словаря списков ячеек.
  Так что индексы тут не нужны. 
  - поиск по названию ячейки пригодится, наверно, в Оператор. Но индекс по повторяющимся значениям требует больше памяти, чем индекс-словарь.
    Получается, что либо я делаю движок с медленным поиском по названиям, но меньше памяти жрущим, либо с быстрым поиском по названиям и больше памяти жрущим.
    Проще будет пока сделать движок экономичный, а индекс по имени добавить потом, собрав движок специально для Оператор.
    Хотя вот надо бы замерить, насколько словарь списков больше простого словаря при миллионе объектов. 
- индекс по ид ячейки займет + 60 байт памяти на 1 ячейку.
- индекс по имени ячейки займет около 80 байт памяти на 1 ячейку

+++Выполняемые действия
todo: Перечислить действия, выполняемые для реализации Задачи. Это самое важное.
С помощью этих сведений я могу затем тупо повторить их и заново собрать Движок.
Привести готовые листинги кода классов если можно.
++++1. Создать класс MCellTemplate по образцу MCell
 
++++2.наполнить класс MCellCollection 

++++3. 

+++Отзывы
Оказались ли принятые решения правильными и почему/почему нет.

+++Документация
todo: Описать происходящие процессы и написать текст для документации
Для лучшего понимания кода и написания документации Движка.
 