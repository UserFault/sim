++ Метод Цепочки Задач

todo: Текст несколько сырой, его надо переработать и окультурить.

Поскольку с Движком опять все усложнилось, то:
Попробую применить новый для меня способ разработки проекта:
 * он только для сложных проектов.

+++Краткая версия
Получается последовательность документов, в которых описываются решения, обсуждения и реализация Задач.
Последовательно проходя по этим документам, я могу заново построить проект.
И при этом я могу отложить любую задачу или переделать потом какую-то часть проекта. 

+++Расширенная версия
Работа над проектом ведется поэтапно - этапами, заходами, задачами, слоями.
Это все тот же Большой План. Теперь уточняется технология.
Проект выполняется как последовательность решения Задач, которые последовательно накладываются друг на друга и в итоге складываются в одно целое, получается результат проекта.
И получившаяся последовательность Задач позволяет и воспроизвести результат повторно, 
 и вносить в него изменения, изменяя, добавляя или удаляя Задачи,
 и понимать, что происходит в каждой части проекта и как все работает,
 и представлять себе весь проект как непрерывное целое,
 и проводить изучение этого процесса разработки впоследствии.
И в то же время, я могу отложить намеченную Задачу, делать Задачи не по порядку,
 и быстро восстановить контекст работы после долгого перерыва, просто просмотрев все уже сделанные Задачи.
А тексты из документов Задач я смогу использовать для написания документации по Движку.
Получается и план работы и табель учета работы и справочник по проекту. 

Весь объем работы нужно разделять на отдельные небольшие задачи.
Каждая задача должна сконцентрироваться на некоторой Сущности проекта или Работе для нее.
Для каждой задачи надо оформить карточку Задачи - для организации всего процесса.
В этой карточке надо описать Задачу, указать по мере выявления зависимости, итп.

*Важно обязательно закончить задачу*, пусть и не в один непрерывный присест.

Не обязательно сразу писать все задачи и создавать их карточки. 
Это можно делать постепенно, по мере выявления и понимания задач.

В процессе выполнения Задачи в Карточку Задачи нужно занести 
- рассуждения, 
- источники данных для анализа, 
- результаты анализа,
- принятые решения,
- действия, выполненные при реализации Задачи. Это самое важное. 
  С помощью этих сведений я могу затем тупо повторить их и заново собрать Движок.
- замечания и идеи возникшие в процессе выполнения и понимания задачи.
- описание поисходящих процессов и документирование.  

Действия при решении задачи надо описывать так, чтобы их можно было воспроизвести.
Лучше приводить сразу образцы кода, чтобы просто копировать их в нужные места файлов проекта.
Для вновь созданных  классов просто целиком приводить листинги.
Для мелких изменений приводить и действия и их расположение.

Эти карточки Задач затем в Большом Плане нужно выстраивать в хронологическую последовательность по мере их выполнения.
Важно, чтобы уже решенные задачи соблюдали этот хронологический порядок, а еще не решенные - образуют примерный план выполнения.

Для уже поставленных, но не решенных задач надо дописывать обстоятельства и полезные факты.
В уже решенные задачи дописывать ничего не надо. 
Кроме сообщений, что решение оказалось неправильным или правильным.
В самостоятельный раздел карточки Отзывы.

Пример:
1 этап: Создание среды для работы
2 этап: Доработка архитектуры проекта - перепроектировать классы идентификаторов.
3 этап: Цепочка наследования класс MObject

