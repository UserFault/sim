++ Задача Концепция Read Only
[template: ШаблонКарточкиЗадачи]

+++Состояние задачи
* Создана Нажми Ctrl+Alt+D

+++Задание
Описать целиком концепцию для поля Read-Only и его использование в Солюшене, Контейнере, Ячейке и Связи.
Нужно написать цельное руководство для всего Движка по этой теме.

+++Зависимости
Добавить зависимости текущей задачи

+++Материалы
 * Ссылки на источники данных

+++Обсуждение и принятые решения
 * Надо свести воедино решения по Read-Only для Солюшена, Контейнера, Ячеек и Связей.
 * Правила:
    * Если Солюшен открыт пользователем только для чтения, значит для Контейнера установлен режим Только чтение.
    * Если Контейнер в режиме Только чтение, то создавать постоянные ячейки, постоянные связи в нем нельзя. Но можно создавать временные ячейки и связи, и изменять их.
    * Если ячейка имеет режим Только чтение, в нее можно добавлять временные связи. 
        * Постоянные связи из других контейнеров добавлять нельзя, так как они должны быть записаны в текущей БД.  
    * Если ячейка имеет режим Только чтение, нельзя изменять ее данные, кроме поля Только чтение.  
    * Если связь имеет режим Только чтение, нельзя изменять ее данные, кроме поля Только чтение, полей ссылок на объекты связываемых ячеек.
    * Если Солюшен имеет режим Только Чтение, или ячейка имеет режим Только Чтение, то обновление данных в БД запрещено.
    * todo: добавить правила здесь
* В солюшене Только Чтение в текущем исполнении нельзя создавать временные ячейки и связи. Хорошо это или плохо? Надо подумать.
    
+++Для всех классов
 * В MElement есть проперти public abstract bool isReadOnly, которое реализовано в каждом из производных классов.
 * В MElement добавлена функция protected bool checkReadOnly(), она действует на все нужные классы. Она позволяет проверять режим Только чтение и выбрасывать исключение если это разрешено.
 * В MSolutionSettings добавлено поле-псевдоконстанта bool Constant_ThrowIfReadOnly. Оно определяет, выбрасывать ли исключение пр попытке изменения read-only элемента, или молча игнорировать операцию. Оно инициализируется в конструкторе как false.

+++Для класса Связи
 * Проперти и поля связи, для которых учитывается флаг Только Чтение:
    * Description : m_description
    * isActive : m_isactive
    * ServiceFlag : m_serviceflag
    * ElementState : m_linkState

+++Для класса Ячеек MCell
 * Поскольку класс - абстракция, то в нем не предполагается ничего по этой теме.

+++Для класса Ячеек MCellA
 * Поскольку значение для проперти isReadOnly хранится в таблице ячеек БД, каждая попытка изменения ячейки заставляет делать запрос в БД значения Read-Only для текущей ячейки. Это замедляет работу с ячейкой. Поэтому в ячейке хранится поле m_ReadOnly. Оно служит кешем. - Это реализовано 02.01.2019 23:40:13
    * Но оно должно загружаться начальным значением из БД при загрузке ячейки в память!

+++Для класса Ячеек MCellB
 * 

+++Для класса MContainer
 *

+++Выполняемые действия
* 1. Составить список проперти и функций используемых пользователем, в которых надо учитывать состояние Только чтение Солюшена.
    * СписокФункцийДвижкаДляПользователя
* 2. Для каждого пункта этого списка описать, как они должны быть реализованы для поддержки Только чтение Солюшена.
    * СписокПоддержкиТолькоЧтение 
* 3. Внести эти замечания в код проекта в виде комментариев или собственно кода. 
++++1. MElement
 добавить код:
 
         /// <summary>
        /// Флаг только чтение
        /// </summary>
        /// <remarks>
        /// По умолчанию = false
        /// </remarks>
        public abstract bool isReadOnly
        {
            get;
            set;
        }
 
         /// <summary>
        /// NT-Проверить флаг ReadOnly в объекте и в Солюшене и выбросить исключение если надо.
        /// </summary>
        /// <remarks>
        /// Выбрасывать исключение, если в MSolutionSettings установлен флаг Constant_ThrowIfReadOnly.
        /// Игнорировать попытку записи, если флаг сброшен.
        /// </remarks>
        /// <returns>Возвращает true если запись запрещена, false если запись разрешена</returns>
        /// <exception cref="SimEngineException">Нельзя изменить read-only элемент.</exception>
        protected bool checkReadOnly()
        {
            //fast return if writable
            if ((this.isReadOnly == false) && (this.Solution.SolutionReadOnly == false))
                return false;
            else
            {
                //check and throw
                if (this.Solution.Settings.Constant_ThrowIfReadOnly == true)
                    throw new SimEngineException("Нельзя изменить read-only элемент");
                else
                    return true;
            }
        }
        
++++2. MCellA
Добавить код:
        /// <summary>
        /// Флаг Только Чтение
        /// </summary>
        /// <remarks>
        /// Кеш значения из БД. Устроен как в MCellB.
        /// Здесь хранится, поскольку должен использоваться при каждом обращении к любому проперти.
        /// А по-старому это +1 запрос в таблицу ячеек - будет тормозить.
        /// </remarks>
        private bool m_ReadOnly;//TODO: Это значение должно быть загружено из БД явно при загрузке ячейки.
        
        /// <summary>
        /// NR-Конструктор 
        /// </summary>
        /// <param name="sol">Объект Солюшена</param>
        public MCellA(MSolution sol)
            : base(sol)
        {
            this.m_cellid = 0;
            this.m_ReadOnly = false;
        }
        
        /// <summary>
        /// NT-Флаг только чтение
        /// </summary>
        /// <remarks>
        /// По умолчанию = false
        /// </remarks>
        public override bool isReadOnly
        {
            get { return this.m_ReadOnly; }
            set
            {
                this.m_ReadOnly = value;
                //save changes
                if (this.m_Solution.SolutionReadOnly == false)//тут проверить только флаг солюшена
                    this.m_Solution.DbAdapter.CellSetReadOnly(this, value);
            }
        } 
        
        //TODO: при изменении ячейки учитывать флаг m_ReadOnly!
        //поля : 
        
переделать все проперти по образцу:
        /// <summary>
        /// NR-Название элемента
        /// </summary>
        /// <remarks>Строка названия длиной до 128 символов.</remarks>
        public override string Name
        {
            get
            {
                return this.m_Solution.DbAdapter.CellGetName(this);
            }
            set
            {
                //check name length
                String name = this.m_Solution.Settings.checkNameLength(value);
                if (checkReadOnly())
                    this.m_Solution.DbAdapter.CellSetName(this, name);
            }
        }


++++3. MLink
Добавить код:
        /// <summary>
        /// Флаг только чтение
        /// </summary>
        private bool m_ReadOnly;
        
Добавить инициализацию поля во все конструкторы класса
        
        /// <summary>
        /// NT-Флаг только чтение
        /// При изменении записывается в БД
        /// </summary>
        /// <remarks>
        /// По умолчанию = false
        /// </remarks>
        public override bool isReadOnly
        {
            get { return this.m_ReadOnly; }
            set 
            { 
                this.m_ReadOnly = value;
                //Если связь записана в БД, то записать изменения в БД соответствующего солюшена
                if (this.isConstAndLocal)
                    this.m_Solution.DbAdapter.LinkUpdateReadOnly(this);
                this.updateLastChange();//update timestamp Changed
            }
        }
        
Переделать проперти по образцу:
        /// <summary>
        /// NT-Описание элемента
        /// String.Empty по умолчанию.
        /// При изменении записывается в БД
        /// Действует флаг ReadOnly
        /// </summary>
        public override string Description
        {
            get { return this.m_description; }
            set 
            {
                if (this.checkReadOnly()) return;//read-only flag check
                m_description = value;
                //Если связь записана в БД, то записать все данные в БД соответствующего солюшена
                if (this.isConstAndLocal)
                    this.m_Solution.DbAdapter.LinkUpdateDescription(this);
                this.updateLastChange();//update timestamp Changed
            }
        }

++++MCellB

++++MContainer

++++MSolution

++++BaseAdapter  

++++MSolutionSetings

      
+++Отзывы
Оказались ли принятые решения правильными и почему/почему нет.

+++Документация
todo: Описать происходящие процессы и написать текст для документации
Для лучшего понимания кода и написания документации Движка.
 